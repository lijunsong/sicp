(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (password-error dummy) "Incorrect password")
  (define (dispatch pwd m)
    (cond ((not (eq? pwd password)) password-error)
          ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "Unknown request -- MAKE-ACCOUNT"
                       m))))
  dispatch)

;;; tests begin
(load "../testframe.scm")

(let ((acc (make-account 100 'pwd)))
  (assert= ((acc 'pwd 'deposit) 100) 200)
  (assert= ((acc 'pwd 'withdraw) 200) 0)
  (assertequal? ((acc 'pwd 'withdraw) 100) "Insufficient funds")
  (assertequal? ((acc 'pwd1 'deposit) 100) "Incorrect password")
  (assert= ((acc 'pwd 'deposit) 100) 100))
